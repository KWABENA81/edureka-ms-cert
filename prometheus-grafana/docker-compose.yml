version: '3.8'

volumes:
  prometheus_data: {
    external: true
  }
  grafana_data: {
    external: true
  }

services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus 
    volumes:
      - "./prometheus:/etc/prometheus"
      - "prometheus_data:/prometheus"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.listen-address=0.0.0.0:9090'
      # - '--storage.tsdb.path=/var/lib/prometheus'
      # - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      # - '--web.console.templates=/usr/share/prometheus/console' 
    ports:
      - "9095:9090"
    networks:
      - prom_graf_networks
  #   # restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - "grafana_data:/var/lib/grafana"
      - "./grafana/provisioning/:/etc/grafana/provisioning/"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - ./grafana/config.monitoring
    ports:
      - "3033:3000"
    networks:
      - prom_graf_networks
    # restart: unless-stopped
    depends_on:
      - prometheus


networks:
  prom_graf_networks:
    external: true
    driver: bridge


#     docker network create prom_graf_networks    aad58bdd504a0aab1aba2f94e8806fed0bff5693ea70e29a05a4ee9c0da0ba8b

# $ docker volume create --driver local --opt type=none --opt device=${HOME}/prometheus_data --opt o=bind --name=prometheus_data
# prometheus_data
# 
# $ docker volume create --driver local --opt type=none --opt device=${HOME}/grafana_data --opt o=bind --name=grafana_data
# grafana_data
