server:
  port: 8989

spring:
  application:
    name: API-GATEWAY
  ##  API GATEWAY CONFIGURATION
  cloud:
    gateway:
#      discovery.locator:
#        enabled: false
#        lower-case-service-id: true
      routes:
        - id: BOOKMS
          uri: lb://BOOKMS       #uri: http://localhost:8097/       #
          predicates:
            - Path=/book/**
            #- Method=GET,POST,DELETE
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: bookms
                fallbackuri: forward:/bookFallBack
            - RewritePath=/book/(?<path>.*), /$\{path}  # /dummy-bookms/(?<path>.*), /$\{path}

        - id: ISSUERMS
          uri: lb://ISSUERMS     #uri: http://localhost:8099/      #
          predicates:
            - Path=/issuer/**
            #- Method=GET,POST,DELETE
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: issuerms
                fallbackuri: forward:/issuerFallBack
            - RewritePath=/issuer/(?<path>.*), /$\{path}  # /dummy-issuerms/(?<path>.*), /$\{path}
# ------------------------------------------------------------------

     # http://localhost:8080/dummy-studentms/students -> http://localhost:8081/students
      # routes:
      #   - id: studentmsid
      #     uri: lb://STUDENTMS
      #     predicates:
      #       - Path= /dummy-studentms/**
      #     filters:
      #       - RewritePath= /dummy-studentms/(?<path>.*), /$\{path}

      #   - id: studentmsclientid
      #     uri: lb://STUDENTMS-CLIENT
      #     predicates:
      #       - Path= /dummy-studentms-client/**
      #     filters:
      #       - RewritePath= /dummy-studentms-client/(?<path>.*), /$\{path}
# -------------------------------------------TEMP
  # autoconfigure:
  #   exclude:
  #    - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  #    - org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration
  #    - org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration
  #    - org.springframework.boot.actuate.autoconfigure.security.reactive.ReactiveManagementWebSecurityAutoConfiguration
# ---------------------------------------------------
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka    #${EUREKA_URI:http://localhost:8761/eureka}
    healthcheck:
      enabled: true
  instance:
    hostname: localhost

# info endpoints configuration
info:
  app:
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}
    encoding: ${project.build.sourceEncoding}
    java:
      version: ${java.version}

# logging
logging:
  file:
    path: tmp/log

management:
  endpoint:
  #   shutdown:
  #     enabled: true
  #   metrics:
  #     enabled: true
  #   prometheus:
  #     enabled: true
    health:
      show-details: always

  endpoints:
    web:
      exposure:
        include: "*"  
        # hystrix.stream, prometheus, health, info, mappings, env, auditevents, shutdown, *
#  metrics:
#    export:
#      prometheus:
#        enabled: true




