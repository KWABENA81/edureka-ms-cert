server:
  port: 8989

spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      discovery.locator:
        enabled: false
        lower-case-service-id: true
        # http://localhost:8989/dummy-bookms/books -> http://localhost:8095/books
      routes:
        - id: bookms
          uri: lb://BOOKMS
          predicates:
            - Path= /book/**            #- Path=/book/**  #    /bookms/**     # /dummy-bookms/**
            - Method=GET,POST,DELETE
          filters:
            - name: CircuitBreaker
              args:
                name: bookms
                fallbackuri: forward:/bookFallBack
            - RewritePath=/book/(?<path>.*), /$\{path}  # /dummy-bookms/(?<path>.*), /$\{path}

        - id: issuerms
          uri: lb://ISSUERMS
          predicates:
            - Path= /issuer/**           #- Path=/issuer/**  # /dummy-issuerms/**
            - Method=GET,POST,DELETE
          filters:
            - name: CircuitBreaker
              args:
                name: issuerms
                fallbackuri: forward:/issuerFallBack
            - RewritePath=/issuerms/(?<path>.*), /$\{path}  # /dummy-issuerms/(?<path>.*), /$\{path}
#


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
      #defaultZone: http://localhost:8761/eureka/
      #defaultZone: http://host.docker.internal:8761/eureka/
      #defaultZone: http://eureka-server:8761/eureka/
    healthcheck:
      enabled: true
  instance:
    hostname: localhost


# info endpoints configuration
info:
  app:
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}
    encoding: ${project.build.sourceEncoding}
    java:
      version: ${java.version}

# logging
logging:
  file:
    path: tmp/log

management:
  endpoint:
    shutdown:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always

  endpoints:
    web:
      exposure:
        include: hystrix.stream, prometheus, health, info, mappings, env, auditevents, shutdown, *
  metrics:
    export:
      prometheus:
        enabled: true

hystrix:
#  ommand:
#    fallback:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 5000
  metrics:
    enabled: true


