server:
  port: 8090

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
        # http://localhost:8090/dummy-bookms/books -> http://localhost:8097/books

      routes:
        - id: book
          uri: lb://book
          predicates:
          - Path=//book/**
          - Path=/api/**,/api/{book}/**  #    /bookms/**     # /dummy-bookms/**
          - Method=GET,POST,DELETE
          filters:
          - name: CircuitBreaker
            args:
              name: book-microservice
              fallbackuri: forward:/bookFallBack
          - RewritePath=/bookms/(?<path>.*), /$\{path}  # /dummy-bookms/(?<path>.*), /$\{path}

        - id: issuer
          uri: lb://issuer
          predicates:
          - Path=//issuer/**
          - Path=/api/**,/api/{issuer}/**  # /dummy-issuerms/**
          - Method=GET,POST,DELETE
          filters:
          - name: CircuitBreaker
            args:
              name: issuer-microservice
              fallbackuri: forward:/issuerFallBack
          - RewritePath=/issuerms/(?<path>.*), /$\{path}  # /dummy-issuerms/(?<path>.*), /$\{path}

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    #service-url:
      #defaultZone: http://localhost:8761/eureka/
      #defaultZone: http://host.docker.internal:8761/eureka/
      #defaultZone: http://eureka-server:8761/eureka/
      #defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
#    healthcheck:
#      enabled: true
#  instance:
#    preferIpAddress: false
#    hostname: localhost


# info endpoints configuration
info:
  app:
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}
    encoding: ${project.build.sourceEncoding}
    java:
      version: ${java.version}

# logging
logging:
  file:
    path: tmp/log

management:
  endpoint:
    shutdown:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always

  endpoints:
    web:
      exposure:
        include: prometheus, health, info, mappings, env, auditevents, shutdown, *
  metrics:
    export:
      prometheus:
        enabled: true

#hystrix:
#  command:
#    fallback:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 5000


