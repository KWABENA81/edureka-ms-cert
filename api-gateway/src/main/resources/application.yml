server:
  port: 8090

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
        # http://localhost:8090/dummy-bookms/books -> http://localhost:8097/books

      routes:
        - id: bookms
          uri: lb://BOOKMS
          predicates:
            - Path= /bookms/**     # /dummy-bookms/**
          filters:
            #- RewritePath:  /bookms/(?<path>.*), /$\{path}   # /dummy-bookms/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: book-microservice
                fallbackuri: forward:/bookFallBack

        - id: issuerms
          uri: lb://ISSUERMS
          predicates:
            - Path= /issuer/**     # /dummy-issuerms/**
          filters:
            #- RewritePath: /issuerms/(?<path>.*), /$\{path}    # /dummy-issuerms/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: issuer-microservice
                fallbackuri: forward:/issuerFallBack

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka


# info endpoints configuration
info:
  app:
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}
    encoding: ${project.build.sourceEncoding}
    java:
      version: ${java.version}

# logging
logging:
  file:
    path: tmp/log

management:
  endpoint:
    shutdown:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always

  endpoints:
    web:
      exposure:
        include: prometheus, health, info, mappings, env, auditevents, shutdown, *


#hystrix:
#  command:
#    fallback:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 5000


